DriveEnd=;
## finishes the drive sequencer
# no parameters

DriveWait=mode,param1, param2;
## pauses the drive sequencer
# mode=time_delay --> wait for param1{time delay (ms) or if -1 from the dashboard (s)}, param2{1}
# mode=sequencer_step --> wait for param1{subsytem sequence step (#)}, param2{1}
# mode=time_since_shooter --> wait for param1{time (ms)} since shooter started shooting, param2{1}
# mode=balls_shot --> wait for param2{current balls shot} or until param1{timeout(ms), set to -1 to ignore}

DriveDistanceX=distance,speed;
## drives the robot in the field-oriented x-direction
# distance --> (in)
# speed --> [-1,1]

DriveDistanceY=distance,speed;
## drives the robot in the field-oriented y-direction
# distance --> (in)
# speed --> [-1,1]

DriveAngleH=goal,speed;
## rotates the robot to the goal field-oriented angle
# angle --> (deg) [0,360]
# speed --> [-1,1]

SetRobotPosition=X,Y;
## manually sets the robot's field-oriented pose
# X --> (in)
# Y --> (in)

DrivePath=distfromgoal,anglefromgoal,timeout,path;
## robot follows the specified path
# distfromgoal --> maximum distance error (in) to allow advancement
# anglefromgoal --> maximum angle error (deg) to allow advancement
# timeount --> maximum elapsed time (ms) before advancement, set to -1 for no timeout
# path --> name of the path to follow, sans the .csv extension

#-----------------------------------------------------------

ManipEnd=;
## finishes the subsystem sequencer
# no parameters

ManipWait=mode,param1,param2;
## pauses the subsystem sequencer
# mode=time_delay --> wait for param1{time delay (ms)} or if -1 from the dashboard (s), param2{1}
# mode=drive_step --> wait for param1{drivesequence step (#)}, param2{1}
# mode=dist_from_start --> wait for param1{distance (in)} from start of current path, param2{1}
# mode=dist_from_end --> wait for param1{distance (in)} from end of current path, param2{1}
# mode=time_since_shooter --> wait for param1{time (ms)} since shooter started shooting, param2{1}
# mode=balls_shot --> wait for param2{current balls shot}, or until param1{timeout(ms), or set to -1 to ignore}

ManipChangeState=state;
## changes the robot's master state
# state --> robot master state (#)

ManipIntake=;
## toggles the intake on/off
# no parameters

ManipAutoTarget=mode;
## enters or exits auto targeting mode
# mode=0 --> exit autotargeting
# mode=1 --> enter autotargeting

ManipBumpIntake=mode;
## starts or stops bumping the intake
# mode=0 --> stops bumping intake
# mode=1 --> starts bumping intake











