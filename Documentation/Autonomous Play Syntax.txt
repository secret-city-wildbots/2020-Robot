-----------------------------------------------------------

DriveEnd=;
# This VI sets the all of the joysticks to zero and permanently halts the drive sequencer.

-----------------------------------------------------------

DriveWait=mode,param1,param2;
# This VI pauses the drive sequencer until the specified condition is met.

>> time_delay
1. Wait time specified in milliseconds, set to -1 to use the dashboard-configured delay.
2. Dummy parameter, set to 1.

>> sequencer_step
1. Wait for the subsystem sequencer to reach the specified step.
2. Dummy parameter, set to 1.

>> time_since_shooter
1. Wait for the time specified in milliseconds, measured from the time the shooter starts shooting.
2. Dummy parameter, set to 1.

>> balls_shot
1. Wait for the number of balls shot in the current shooting session to reach the specified number.
2. Timeout specified in milliseconds,  measured from the time the shooter starts shooting, set to -1 to ignore.

-----------------------------------------------------------

DriveDistanceX=param1,param2;
# This VI drives the robot in the field-oriented x-direction, note that there is no feedback control loop.

1. The drive distance specified in inches.
2. The signed strafe command, note that the user must match the command sign to the distance sign.

-----------------------------------------------------------

DriveDistanceXAdvanced=param1,param2,param3;
# This VI drives the robot in the field-oriented x-direction, with orientation lock and overshoot prevention.

1. The drive distance specified in inches [-630,630].
2. The number of inches under the goal allowed [0,630].
3. The number of inches above the goal allowed [0,630].

-----------------------------------------------------------
DriveDistanceY=param1,param2;
# This VI drives the robot in the field-oriented y-direction, note that there is no feedback control loop.

1. The drive distance specified in inches.
2. The signed strafe command, note that the user must match the command sign to the distance sign.

-----------------------------------------------------------

DriveAngleH=param1,param2;
# This VI rotates the robot to the specified field-oriented angle.

1. The goal angle specified in degrees on [0,360].
2. The signed rotation command, note that the user must specify the desired rotation direction.

-----------------------------------------------------------

DriveAngleHAdvanced=param1,param2;
# This VI rotates the robot to the specified field-oriented angle. The angle has to be within the specified range for a certain amount of time.

1. The goal angle specified in degrees on [0,360].
2. The error allowed, the number of degrees on either side of the goal allowed [0,360].

-----------------------------------------------------------
SetRobotPosition=param1,param2;
# This VI manually updates the robot's position, use to zero-out accumulated pose error.

1. The field-oriented x position specified in inches.
2. The field-oriented y position specified in inches.

-----------------------------------------------------------

DrivePath=param1,param2,param3,param4;
# This VI uses the pure-pursuit algorithm to follow the specified path.

1. The maximum distance error magnitude (in) to allow advancement to the next step.
2. The maximum angle error magnitude (deg) to allow advancement to the next step.
3. The maximum elapsed time (ms) before advancement to the next step, set to -1 to ignore.
4. The name of the path to follow, do not include the .csv extension.

-----------------------------------------------------------
-----------------------------------------------------------

ManipEnd=;
# This VI sets the all of the joysticks buttons to safe positions and permanently halts the subsystem sequencer.

-----------------------------------------------------------

ManipWait=mode,param1,param2;
# This VI pauses the subsystem sequencer until the specified condition is met.

>> time_delay
1. Wait time specified in milliseconds, set to -1 to use the dashboard-configured delay.
2. Dummy parameter, set to 1.

>> drive_step
1. Wait for the drive sequencer to reach the specified step.
2. Dummy parameter, set to 1.

>> dist_from_start
1. Wait for the robot to be at least the specified distance (in) along the current path.
2. Dummy parameter, set to 1.

>> dist_from_end
1. Wait for the robot to be closer than the specified distance (in) from the end of the current path.
2. Dummy parameter, set to 1.

>> time_since_shooter
1. Wait for the time specified in milliseconds, measured from the time the shooter starts shooting.
2. Dummy parameter, set to 1.

>> balls_shot
1. Wait for the number of balls shot in the current shooting session to reach the specified number.
2. Timeout specified in milliseconds,  measured from the time the shooter starts shooting, set to -1 to ignore.

-----------------------------------------------------------

ManipChangeState=param1;
# This VI cahnges the robot's master state.

1. Specifies the desired robot master state.

-----------------------------------------------------------

ManipIntake=;
# Toggles the intake deployment.

-----------------------------------------------------------

ManipAutoTarget=param1;
# This VI enters or exists auto-targeting mode.

1. Set to 0 to exit auto-targeting, set to 1 to enter auto-targeting.

-----------------------------------------------------------

ManipBumpIntake=param1;
# This VI starts or stops the intake bumping sequence.

1. Set to 0 to stop bumping the intake, set to 1 to start bumping the intake.

-----------------------------------------------------------